/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.nossa.empresa.epicsteam.views;

import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 75790
 */
public class JogoListaJFrame extends javax.swing.JFrame {

    /**
     * Creates new form JogoListaJFrame
     */
    public JogoListaJFrame() {
        initComponents();
        carregarJogos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableJogos = new javax.swing.JTable();
        jButtonEditarJogo = new javax.swing.JButton();
        jButtonApagarJogo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonListar = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jTableJogos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Jogo", "Tipo", "Id", "Valor"
            }
        ));
        jScrollPane1.setViewportView(jTableJogos);

        jButtonEditarJogo.setText("Editar Lista de Jogos");
        jButtonEditarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarJogoActionPerformed(evt);
            }
        });

        jButtonApagarJogo.setText("Apagar Jogo da Lista");
        jButtonApagarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarJogoActionPerformed(evt);
            }
        });

        jButton1.setText("Adicionar Jogo na Lista");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEditarJogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonApagarJogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jButtonListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonEditarJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonApagarJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        var jFrame = new JogoCadastroJFrame();
        jFrame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonEditarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarJogoActionPerformed
        /*var modeloTabela = (DefaultTableModel) jTableJogos.getModel();
        var indiceLinhaSelecionada = jTableJogos.getSelectecRow();
        var idCategoria = Integer.parseInt(
            modeloTabela.getValueAt(indiceLinhaSelecionada,0).toString());
        var nomeJogos = modeloTabela.getValueAt(indiceLinhaSelecionada,1).toString();
        
        var jFrame = new CategoriaEditarJogoListaJFrame(idCategoria, nomeJogos);
        jFrame.setVisible(true);*/
    }//GEN-LAST:event_jButtonEditarJogoActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonApagarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarJogoActionPerformed
        var modeloTabela = (DefaultTableModel) jTableJogos.getModel();
        var indiceLinhaSelecionada = jTableJogos.getSelectedRow();
        
        var nome = modeloTabela.getValueAt(indiceLinhaSelecionada, 0).toString();
        var tipo = modeloTabela.getValueAt(indiceLinhaSelecionada, 1).toString();
        var id = modeloTabela.getValueAt(indiceLinhaSelecionada, 2).toString();
        var valor = modeloTabela.getValueAt(indiceLinhaSelecionada, 3).toString();

        var resultado = JOptionPane.showConfirmDialog(null,
                "Deseja realmente apagar o JOGO '" + nome + tipo + id + valor +"'?",
                "CUIDADO",
                JOptionPane.YES_NO_OPTION);
        if (resultado == JOptionPane.NO_OPTION || resultado == JOptionPane.CLOSED_OPTION) {
            return;
        }

        var idApagar = Integer.parseInt(id);
        try {
            var url = "jdbc:mysql://localhost:3306/steamdb";
            var usuario = "root";
            var senha = "admin";
            var conexao = DriverManager.getConnection(url, usuario, senha);
            var query = "DELETE FROM jogos WHERE id = " + idApagar;
            var statement = conexao.createStatement();
            statement.execute(query);
            JOptionPane.showMessageDialog(null, "Jogo apagado com sucesso");
            carregarJogos();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar no banco de dados");
            e.printStackTrace();
        }
                                                 
    }//GEN-LAST:event_jButtonApagarJogoActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        carregarJogos();
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JogoListaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JogoListaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JogoListaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JogoListaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JogoListaJFrame().setVisible(true);
            }
        });
}  
    private void carregarJogos() {
        var modeloTabela = (DefaultTableModel) jTableJogos.getModel();
        modeloTabela.setRowCount(0);
        try {
            var url = "jdbc:mysql://localhost:3306/steamdb";
            var usuario = "root";
            var senha = "admin";
            var connection = DriverManager.getConnection(url, usuario,senha);
            var statement = connection.createStatement ();
            var query = "SELECT nome,tipo, id, valor from jogos";
            statement.execute(query);
            var resultSet = statement.getResultSet();
            while(resultSet.next()){
            var nome = resultSet.getString("nome");
            var tipo = resultSet.getString("tipo");
            var id = Integer.parseInt(resultSet.getString("id"));
            var valor = Double.parseDouble(resultSet.getString("valor"));
            
            modeloTabela.addRow(new Object[]{
                nome,
                tipo,
                id,
                valor,
            });
        }
    } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar no banco de dados");
            e.printStackTrace();
            }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonApagarJogo;
    private javax.swing.JButton jButtonEditarJogo;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableJogos;
    // End of variables declaration//GEN-END:variables
}
